#  –Ω–∞–π—Ç–∏ –±–æ—Ç–∞!
# auto-py-to-exe –¥–ª—è –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ online


import webbrowser
import os
import pythoncom
import pyautogui as pg
from telebot import types
import telebot
from win32ctypes.core import ctypes
import ctypes
import win32security
import win32api
from ntsecuritycon import *
import subprocess
import sys
import pyautogui
import time
import win32com.client
from fuzzywuzzy import fuzz
import json

token = ''

bot = telebot.TeleBot(token)


def AdjustPrivilege(priv, enable=1):
    """–§—É–Ω–∫—Ü–∏—è –¥–∞–µ—Ç –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏ –¥–ª—è –≤—ã–∫–ª—é—á–µ–Ω–∏–µ, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –∏ —Å–ø—è—â–µ–≥–æ —Ä–µ–∂–∏–º–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞!
    –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è! –î–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π shotdown, mode_sleep, restart"""

    # Get the process token
    flags = TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY
    htoken = win32security.OpenProcessToken(win32api.GetCurrentProcess(), flags)
    # Get the ID for the system shutdown privilege.
    idd = win32security.LookupPrivilegeValue(None, priv)
    # Now obtain the privilege for this process.
    # Create a list of the privileges to be added.
    if enable:
        newPrivileges = [(idd, SE_PRIVILEGE_ENABLED)]
    else:
        newPrivileges = [(idd, 0)]
    # and make the adjustment
    win32security.AdjustTokenPrivileges(htoken, 0, newPrivileges)


def markup():
    """
    –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∏–∂–Ω–µ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–æ–π /stop

    :return: markup
    """
    mark = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    btn0 = types.KeyboardButton("/start")
    btn1 = types.KeyboardButton("üîä")
    btn2 = types.KeyboardButton("üîâ")
    btn3 = types.KeyboardButton("‚èπÔ∏è")
    btn4 = types.KeyboardButton("‚ñ∂Ô∏è")
    btn5 = types.KeyboardButton("üîá")
    btn6 = types.KeyboardButton("üõë")
    btn7 = types.KeyboardButton("üîÑ")
    btn8 = types.KeyboardButton("üí§")
    btn9 = types.KeyboardButton("üéÆ")
    btn10 = types.KeyboardButton("üé¨")
    mark.add(btn0, btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8, btn9, btn10)
    return mark


@bot.message_handler(commands=['start'])
def start(message: telebot.types.Message) -> None:
    text = "–ü—Ä–∏–≤–µ—Ç! –ú–µ–Ω—è –∑–æ–≤—É—Ç ZEUS\n" \
           "–Ø —É–º–µ—é —É–ø—Ä–∞–≤–ª—è—Ç—å –º—É–ª—å—Ç–∏–º–µ–¥–∏–µ–π:\n" \
           "‚ñ∂Ô∏è - –ø–ª–µ–π\n" \
           "‚èπÔ∏è - —Å—Ç–æ–ø\n" \
           "üîä - –∑–≤—É–∫ –≥—Ä–æ–º—á–µ\n" \
           "üîâ - –∑–≤—É–∫ —Ç–∏—à–µ\n" \
           "üîá - –±–µ–∑ –∑–≤—É–∫–∞\n" \
           "–ï—â–µ —è –º–æ–≥—É:\n" \
           "üéÆ - –∑–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É\n" \
           "üé¨ - –≤–∫–ª—é—á–∏—Ç—å —Ñ–∏–ª—å–º\n" \
           "–ê —Ç–∞–∫–∂–µ:\n" \
           "üõë - –≤—ã–∫–ª—é—á–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä\n" \
           "üîÑ - –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä\n" \
           "üí§ - —Å–ø—è—â–∏–π —Ä–µ–∂–∏–º\n" \
           "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!üòä"
    bot.send_message(message.chat.id, text=text)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–µ—Ç–µ –∫–Ω–æ–ø–∫—É –ø–æ–∂–∞–ª—É–π—Å—Ç–∞", reply_markup=markup())


@bot.message_handler(content_types=['text'])
def commands(message):
    """–í—ã–±–æ—Ä —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞"""

    list_keys = {
        'üîä': vol,
        'üîâ': vol,
        '‚èπÔ∏è': stop,
        '‚ñ∂Ô∏è': play,
        'üîá': soundless,
        "üõë": shutdown,
        "üîÑ": restart,
        "üí§": sleep_mode,
        "üéÆ": games,
        "üé¨": movie
    }

    text = message.text

    for k, v in list_keys.items():
        if k == text:
            list_keys[k](message, k)
            return
    else:
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ –∫–Ω–æ–ø–∫—É –ø–æ–∂–∞–ª—É–π—Å—Ç–∞', reply_markup=markup())


def movie(*args):
    """—Ñ—É–Ω–∫—Ü–∏—è –ø–æ –∑–∞–ø—Ä–æ—Å—É —Ñ–∏–ª—å–º–∞
    –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –∏ –ø–µ—Ä–µ–¥–∞–µ—Ç –∏–º—è –≤ —Å–ª–µ–¥—É—é—â—É—é —Ñ—É–Ω–∫ get_movie"""
    message = args[0]
    # bot.send_message(message.chat.id, 'not implemented yet', reply_markup=markup())
    mess = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞")
    bot.register_next_step_handler(mess, get_movie)


def get_movie(message):
    """–æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—å—Å—è —Ñ–∞–π–ª —Å–æ —Å–ª–æ–≤–∞—Ä–µ–º —Ñ–∏–ª—å–º–æ–º, —ç—Ç–æ —Å–ª–æ–≤–∞—Ä—å –≥–¥–µ –∫–ª—é—á—å —ç—Ç–æ —á–∏—Å–ª–æ —Å–ø–∏—Å–∫–∞ –∑–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª –æ—Ç 1 –¥–æ 100000
    {–∫–ª—é—á 1 —ç—Ç–æ –º–µ—Å—Ç–æ –≤ —Å–ª–æ–≤–∞—Ä–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–ª—é—á–∞ —ç—Ç–æ —Å–ø–∏—Å–æ–∫ –≤ –∫–æ—Ç–æ—Ä–æ–º –ª–µ–∂–∏—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –∏ —Å—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É.

    list_film —Ö—Ä–∞–Ω–∏—Ç —Ñ–∏–ª—å–º–º—ã –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–±—Ä–∞–Ω–Ω—ã –∏–∑ —Ñ–∞–π–ª–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É. –≥–¥–µ –∫–ª—é—á —ç—Ç–æ –ø—Ä–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –∫–∞–∫ –≤ —Ñ–∞–π–ª–µ –≤—ã—à–µ,
     –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –∏ —Å—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞–∫ –≤ —Ñ–∞–π–ª–µ.

     —Å–æ–∑–¥–∞—é—Ç—å—Å—è –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏ –∏ —Å—á–µ—Ç—á–∏–∫ –∏ —Å—Ç—Ä–æ–∫–∞ —Å —Ç–µ–∫—Å—Ç–æ–º. –≥–¥–µ —Ç–µ–∫—Å—Ç —ç—Ç–æ –ø–æ –Ω–æ–º–µ—Ä—É —Å—á–µ—Ç—á–∏–∫–∞ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞,
     –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏ —ç—Ç–æ –Ω–æ–º–µ—Ä —Å—á–µ—Ç—á–∏–∫–∞ –∏ callback  —Å –ø–æ—Ä—è–¥–∫–æ–≤—ã–º –Ω–æ–º–µ—Ä–æ–º –∏–∑ —Å–ª–æ–≤–∞—Ä—è.
     """
    movie_name = message.text

    with open('films_new_new.json', 'r', encoding="UTF-8") as file:
        box = json.load(file)

    list_films = {}
    for k, v in box.items():
        fuzzz = fuzz.WRatio(v[0], movie_name)
        if fuzzz > 87:
            list_films[k] = v
    if len(list_films.keys()) > 0:

        keyboard = types.InlineKeyboardMarkup()
        count = 1
        text = ''
        for key, val in list_films.items():
            text += f'{count}. {val[0]}\n'
            keyboard.add(types.InlineKeyboardButton(text=str(count), callback_data=key))
            count += 1

        bot.send_message(message.chat.id, text, reply_markup=keyboard)
    else:
        bot.send_message(message.chat.id, "–§–∏–ª—å–º—ã –ø–æ –í–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        bot.send_message(message.chat.id, "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞", reply_markup=markup())


def games(*args):
    """—Ñ—É–Ω–∫—Ü–∏—è —Å—Ç—Ä–æ–∏—Ç –ø—É—Ç—å –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –¥–æ —Ä–∞–±–æ—á–µ–≥–æ —Å—Ç–æ–ª–∞ –∏ –ø–æ—Ç–æ–º –¥–æ –ø–∞–ø–∫–∏ games –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ
     —Å–æ–∑–¥–∞–µ—Ç –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏ —Å–∫–æ–ª—å–∫–æ –µ—Å—Ç—å —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ games –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É —Å –ø—Ä–æ–≥—Ä–∞–º–º–æ–π(–∏–≥—Ä—ã)
     –æ—Ç—Å—ã–ª–∞–µ—Ç –≤ —Ñ—É–Ω–∫—Ü–∏—é func_coll
     –≤ –∫–æ–Ω—Ü–µ –≤—ã–∑—ã–≤–∞–µ—Ç reply –∫–Ω–æ–ø–∫–∏ —Å –æ—Å–Ω–æ–≤–Ω—ã–º –º–µ–Ω—é
     –∏–Ω–∞—á–µ –ø—Ä–æ—Å–∏—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ–∑–¥–∞—Ç—å –ø–∞–ø–∫—É.
     """

    message = args[0]
    path = os.path.abspath(os.path.join('..', 'games'))
    path_f_l_b = os.path.abspath(os.path.join('..', 'Games'))
    path_l_b = os.path.abspath(os.path.join('..', 'GAMES'))
    if os.path.isdir(path):
        keyboard = types.InlineKeyboardMarkup()
        for file in os.listdir(path):
            x = os.path.join(path, file)
            game_name = os.path.splitext(file)[0]
            keyboard.add(types.InlineKeyboardButton(text=game_name, callback_data=x))

        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ –∏–≥—Ä—É', reply_markup=keyboard)
    elif os.path.isdir(path_f_l_b):
        keyboard = types.InlineKeyboardMarkup()
        for file in os.listdir(path_f_l_b):
            x = os.path.join(path_f_l_b, file)
            game_name = os.path.splitext(file)[0]
            keyboard.add(types.InlineKeyboardButton(text=game_name, callback_data=x))

        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ –∏–≥—Ä—É', reply_markup=keyboard)
    elif os.path.isdir(path_l_b):
        keyboard = types.InlineKeyboardMarkup()
        for file in os.listdir(path_l_b):
            x = os.path.join(path_l_b, file)
            game_name = os.path.splitext(file)[0]
            keyboard.add(types.InlineKeyboardButton(text=game_name, callback_data=x))

        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ –∏–≥—Ä—É', reply_markup=keyboard)
    else:
        bot.send_message(message.chat.id, '–°–æ–∑–¥–∞–π—Ç–µ –ø–∞–ø–∫—É (Games –∏–ª–∏ GAMES –∏–ª–∏ games) –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ –∏ –¥–æ–±–∞–≤—Ç–µ —è—Ä–ª—ã–∫–∏ –∏–≥—Ä'
                                          '–∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø—É—Å–∫–∞—Ç—å —Å –ø–æ–º–æ—â—å—é –±–æ—Ç–∞')


@bot.callback_query_handler(func=lambda call: True)
def func_call(call):
    """—Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç callback –æ—Ç –∏–≥–ª–∞–π–Ω –∫–Ω–æ–ø–æ–∫ –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –µ–≥–æ –≤ string.
        –µ—Å–ª–∏ string —ç—Ç–æ –ø—É—Ç—å —Ç–æ –∑–∞–ø—É—Å–∫–∞–∫–µ—Ç—å—Å—è —Ñ—É–Ω–∫—Ü–∏—è start_game  —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º string.
        –∏–Ω–∞—á–µ –µ—Å–ª–∏ string == play —Ç–æ –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è func_x –∑–∞–ø—É—Å–∫ –ø–ª–µ–µ—Ä–∞.
        –∏–Ω–∞—á–µ –∑–Ω–∞—á–∏—Ç —ç—Ç–æ –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –≤ —Å–ª–æ–≤–∞—Ä–µ —Å —Ñ–∏–ª—å–º–∞–º–∏ –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è start_film —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ string –∏
        call.message.
        –ø–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –º–µ–Ω—é  —Å–æ—Å–Ω–æ–≤–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏.
    """
    string = call.data

    if os.path.exists(string):
        start_game(string)
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text='–í—ã–±–µ—Ä–µ—Ç–µ –∏–≥—Ä—É', reply_markup=None)
        bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ –∫–Ω–æ–ø–∫—É –ø–æ–∂–∞–ª—É–π—Å—Ç–∞', reply_markup=markup())
    elif string == 'PLAY':
        func_x()
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text='–ù–∞—á–∞—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä?', reply_markup=None)
        bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ –∫–Ω–æ–ø–∫—É –ø–æ–∂–∞–ª—É–π—Å—Ç–∞', reply_markup=markup())
    else:
        start_film(string, call.message)
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text=call.message.text, reply_markup=None)


def start_film(num, message):
    """
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –∏–∑ —Å–ª–æ–≤–∞—Ä—è —Å —Ñ–∏–ª—å–º–∞–º–∏ –∏ message
    –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —Ñ–∞–π–ª —Å–æ —Å–ª–æ–≤–∞—Ä–µ–º —Å —Ñ–∏–ª—å–º–∞–º–∏ –∏ –±–µ—Ä–µ—Ç –∏–∑ –Ω–µ–≥–æ –ø–æ–ø–æ—Ä—è–¥. –Ω–æ–º–µ—Ä—É —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∏–ª—å–º –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –µ–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ.
    –î–∞–ª–µ–µ —Å–æ–∑–¥–∞–µ—Ç—Å—è –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∞ play –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è.
    """
    with open('films_new_new.json', 'r', encoding="UTF-8") as file:
        box = json.load(file)
    url = box[num][1]

    webbrowser.open(url)

    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text='PLAY', callback_data="PLAY"))
    bot.send_message(message.chat.id, '–ù–∞—á–∞—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä?', reply_markup=keyboard)


def func_x():
    """
    –§—É–Ω–∫—Ü–∏—è —Å–∏–º—É–ª–∏—Ä—É—é—â–∞—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º—ã—à–∏.
    –°–Ω–∞—á–∞–ª–∞ –±–µ—Ä–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞ –≤ px, –∑–∞—Ç–µ–º–∏ —Å—Ç–∞–≤–∏—Ç –º—ã—à—å –ø–æ —Ü–µ–ø–Ω—Ç—Ä—É —ç–∫—Ä–∞–Ω–∞, –∑–∞—Ç–µ–º —Å–∫—Ä–æ–ª–∏—Ç –≤–Ω–∏–∑, –¥–µ–ª–∞–µ—Ç –¥–≤–æ–π–Ω–æ–π —â–µ–ª—á–µ–∫
    –ª–µ–≤–æ–π –∫–ª–∞–≤–∏—à–µ–π –º—ã—à–∏ –æ—Ç–∫—Ä—ã–≤–∞—è –ø–ª–µ–µ—Ä –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω, –∑–∞—Ç–µ–º –¥–µ–ª–∞–µ—Ç –æ–¥–∏–Ω —â–µ–ª—á–µ–∫ –ª–µ–≤–æ–π –∫–Ω–æ–ø–∫–æ–π –º—ã—à–∏ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–ª–µ–µ—Ä–∞.

    """
    # get the screen resolution
    screenWidth, screenHeight = pyautogui.size()

    # calculate the x and y coordinates to move the mouse to the center
    x = screenWidth // 2
    y = screenHeight // 2

    # move the mouse to the center of the screen
    pyautogui.moveTo(x, y)

    # Scrolls down 100 pixels
    pyautogui.scroll(-1100)
    time.sleep(2)

    # move left 100 pixels
    pyautogui.moveRel(-350, 0)

    # Double clicks the left mouse button
    pyautogui.doubleClick()
    time.sleep(2)

    # Clicks the left mouse button
    pyautogui.click(button='left')


def start_game(path):
    """—Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø—É—Ç—å –¥–æ —è—Ä–¥—ã–∫–∞, —Å –ø–æ–º–æ—â—å—é –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –±–µ—Ä–µ—Ç –∏–∑ —è—Ä–ª—ã–∫–∞ –¥–∞–Ω–Ω—ã–µ –≤–≤–∏–¥–µ –ø—Ä—è–º–æ–≥–æ –ø—É—Ç–∏ –¥–æ —Ñ–∞–π–ª–∞ .exe
    –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –µ–≥–æ –ø–æ—Å–ª–µ —á–µ–≥–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ –≤ func_call"""

    pythoncom.CoInitializeEx(0)
    shell = win32com.client.Dispatch("WScript.Shell")
    shortcut = shell.CreateShortCut(path)
    if os.path.splitext(path)[1] == '.lnk':
        subprocess.Popen(shortcut.Targetpath)
        # print(shortcut.Targetpath)
    else:
        subprocess.Popen((['open', shortcut.Targetpath]))


def sleep_mode(*args):
    """–°–ø—è—â–∏–π —Ä–µ–∂–∏–º"""
    message = args[0]
    try:
        bot.send_message(message.chat.id, '–°–ø—è—â–∏–π —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω', reply_markup=markup())
        AdjustPrivilege(SE_SHUTDOWN_NAME)
        win32api.SetSystemPowerState(True, True)
        return
    except:
        Exception()


def restart(*args):
    """–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å–∏—Å—Ç–µ–º—ã"""
    message = args[0]
    try:
        bot.send_message(message.chat.id, '–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å–∏—Å—Ç–µ–º—ã', reply_markup=markup())
        AdjustPrivilege(SE_SHUTDOWN_NAME)
        user32 = ctypes.WinDLL('user32')
        user32.ExitWindowsEx(0x00000002, 0x00000000)
        return
    except:
        Exception()


def shutdown(*args):
    """–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã"""

    message = args[0]
    try:
        bot.send_message(message.chat.id, '–í—ã–∫–ª—é—á–µ–Ω–∏–µ', reply_markup=markup())
        AdjustPrivilege(SE_SHUTDOWN_NAME)
        user32 = ctypes.WinDLL('user32')
        user32.ExitWindowsEx(0x00000008, 0x00000000)
        return
    except:
        Exception()


def vol(message, k):
    """–§—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª—è—é—â–∞—è –ø—Ä–∏–±–∞–≤–ª–µ–Ω–∏–µ –≥—Ä–æ–º–∫–æ—Å—Ç–∏ –∏–ª–∏ —É–±–∞–≤–ª—è—é—â–∞—è. –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–ø—Ç—É—Ä—É"""

    mark_up = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    btn_1 = types.KeyboardButton('2')
    btn_2 = types.KeyboardButton('5')
    btn_3 = types.KeyboardButton('10')
    btn_4 = types.KeyboardButton('15')
    btn_5 = types.KeyboardButton('20')
    mark_up.add(btn_1, btn_2, btn_3, btn_4, btn_5)

    mess = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ –∫–Ω–æ–ø–∫—É –ø–æ–∂–∞–ª—É–π—Å—Ç–∞', reply_markup=mark_up)
    if k == 'üîä':
        bot.register_next_step_handler(mess, turn_up)
    else:
        bot.register_next_step_handler(mess, turn_down)


def turn_up(message):
    """–§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–±–∞–≤–ª—è—é—â–∞—è –∑–≤—É–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–Ω–æ–ø–∫–∏, –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞"""

    num = int(message.text)
    pg.press(['volumeup'], num // 2)
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ –∫–Ω–æ–ø–∫—É –ø–æ–∂–∞–ª—É–π—Å—Ç–∞', reply_markup=markup())


def turn_down(message):
    """–¥–µ–ª–∞–µ—Ç –∑–≤—É–∫ —Ç–∏—à–µ –≤ x2"""

    num = int(message.text)
    pg.press(['volumedown'], num // 2)
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ –∫–Ω–æ–ø–∫—É –ø–æ–∂–∞–ª—É–π—Å—Ç–∞', reply_markup=markup())


def play(*args):
    """Play or Pause"""

    message = args[0]
    pg.press(['playpause'])
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ –∫–Ω–æ–ø–∫—É –ø–æ–∂–∞–ª—É–π—Å—Ç–∞', reply_markup=markup())


def soundless(*args):
    """–î–µ–ª–∞–µ—Ç –∫–æ–º–ø –±–µ–∑ –∑–≤—É–∫–∞, —Å–æ –∑–≤—É–∫–æ–º"""

    message = args[0]
    pg.press(['volumemute'])
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ –∫–Ω–æ–ø–∫—É –ø–æ–∂–∞–ª—É–π—Å—Ç–∞', reply_markup=markup())


def stop(*args):
    """Play or Pause"""

    message = args[0]
    pg.press(['playpause'])
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ –∫–Ω–æ–ø–∫—É –ø–æ–∂–∞–ª—É–π—Å—Ç–∞', reply_markup=markup())


def main():
    """
    –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞—é—â–∞—è —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç.

    """
    try:
        bot.polling(none_stop=True)
    except Exception as e:
        print(e)
        main()


if __name__ == "__main__":
    main()

# –ó–∞–º–µ—Ç–∫–∏!
# –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É —Å–∫—Ä–∏–Ω—à–æ—Ç —ç–∫—Ä–∞–Ω–∞

